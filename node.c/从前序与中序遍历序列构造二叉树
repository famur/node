/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        if(preorder.empty() || inorder.empty())
        {
            return NULL;
        }
        int index = 0;
        return cTree(preorder, inorder, 0, preorder.size() - 1, index);
    }
    TreeNode * cTree(vector<int>& preorder, vector<int>& inorder,int begin, int end, int index)
    {
        if(begin > end)
        {
            return NULL;
        }
        TreeNode * root =  new TreeNode(preorder[index]);
        //左树
        int p = begin;
        for(; p <= end; p++)
        {
            if(inorder[p] == preorder[index])
            {
                root->left = cTree(preorder, inorder, begin, p - 1, index+1);
                root->right = cTree(preorder, inorder, p + 1, end, index + p - begin + 1);
            }
        }
        //右树
        return root;
    }
};
