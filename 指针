C语言中指针是很重要的知识指针大概有一下6个方面我向大家一一说明。
1.字符指针
2. 数组指针``
3. 指针数组
4. 函数指针
5. 函数指针数组
6. 指向函数指针数组的指针
**一、字符指针**
字符指针char*
使用方式
```c
int main()
{
	char str = 's';
	char *p = &srt;
	return 0;
}
int main()
{
	char *pstr = "hello world";
	printf("%s\n", pstr);
	return 0;
}
```
是把hello world都放到pstr中去了吗？
上述使用中本质是将hello world 首字符的地址放到了pstr中，（将h的地址放到pstr中）

二、数组指针
数组指针这是数组还是指针？指针。
数组指针是能够指向数组的指针。
例子：
int (*p) [10];
p先和   *结合，说明p是一个指针变量，然后指向的是一个大小为10个整型的数组。

三、指针数组
指针数组是一个存放指针的数组。

```c
int * array1[10]; //整型指针的数组
int * array2[3]; //一级字符指针数组
int ** array3[5] //二级字符指针数组
```
四、函数指针
指针指向函数
```c
void (*pfun)();
```
pfun 先和 * 结合，说明pfun是指针，指针指向的是一个函数，指向的函数内有参数，返回值为void。
五、函数指针数组
要把函数的地址存到一个数组中，那这个数组就叫函数指针数组。
定义如下

```c
int （*parr1[10])();
int *parr2[10]();
int (*)()parr3[10];
```
parr1先和[  ] 结合，说明parr1是数组，数组的内容是什么？是int ( *）（）类型的函数指针。

六、指向函数指针数组的指针

指针指向一个数组，数组的元素都是函数指针；

```c
int main()
{
	//函数指针
	void (*pfun) (const char*) ;
	//函数指针的数组
	void (*pfunArr[5]) (const char* str)
	//指向函数指针数组的指针
	void (*(*ppfunArr)[10])(const char*) 
	return 0;
}
```
