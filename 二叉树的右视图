深度优先
广度优先
深度广度
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> res;
		queue<TreeNode*> q;
		if (root == nullptr)
		{
			return res;
		}
		q.push(root);
		while (!q.empty())
		{
            int size = q.size();
			for(int i = 0; i < size; i++)
            {
                TreeNode* index = q.front();

                if (index->left != NULL)
			    {
				    q.push(index->left);
			    }
                if (index->right != NULL)
			    {
				    q.push(index->right);
			    }
			    if(i == size - 1)
                {
                    res.push_back(q.front()->val);
                }
                q.pop();
            }
		}
		return res;
    }
};
