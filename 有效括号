/*
	有效括号	
			栈先入后出的特点恰好与本题括号排序特点一致，遇到左括号入栈，遇到右括号是将对应栈顶左括号出栈
			则遍历完所有括号后 stack 仍然为空；
		class Solution {
public:
    bool isValid(string s) {
        stack<char> parentheses;
        for (int i = 0; i < s.size(); ++i) 
        {
            if (s[i] == '(' || s[i] == '[' || s[i] == '{') 
                parentheses.push(s[i]);
            else 
            {
                 if (parentheses.empty()) return false;
                 if (s[i] == ')' && parentheses.top() != '(') return false;
                 if (s[i] == ']' && parentheses.top() != '[') return false;
                 if (s[i] == '}' && parentheses.top() != '{') return false;
                 parentheses.pop();
             }
         }
         return parentheses.empty();
    }
};
		建立哈希表 dic 构建左右括号对应关系：keykey 左括号，valuevalue 右括号；这样查询 22 个括号是否对应只需 O(1)O(1) 时间复杂度；
		建立栈 stack，遍历字符串 s 并按照算法流程一一判断。


*/
