
#include<iostream>
#include<string>
#include<vector>
#include<algorithm>

using namespace std;

int main()
{
	string cur;
	string prev;
	while (cin >> prev >> cur)
	{
		int len1 = prev.size();
		int len2 = cur.size();
		int n = 0;
        vector<vector<int>> f(len1 + 1, vector<int>(len2 + 1, 0));
        for (int i = 0; i <= len1; ++i) 
        {
            f[i][0] = i;
        }
        for (int i = 0; i <= len2; ++i) 
        {
            f[0][i] = i;
        }
		for (int i = 1; i <= len1; i++)
		{
			for (int j = 1; j <= len2; j++)
			{
				if (prev[i - 1] == cur[j - 1]) 
                {
                    f[i][j] = 1 + min(f[i][j - 1], f[i - 1][j]);
                    f[i][j] = min(f[i][j], f[i - 1][j - 1]);
                }
                else 
                {
                    f[i][j] = 1 + min(f[i][j - 1], f[i - 1][j]);
                    f[i][j] = min(f[i][j], 1 + f[i - 1][j - 1]);
			    }
		    }
        }
		cout << f[len1][len2] << endl;
	}
	return 0;
}


class Gift {
public:
    int getValue(vector<int> gifts, int n) {
        // write code here
        sort(gifts.begin(), gifts.end());
        int count = 0;
        int num = gifts[n / 2];
        for(int i = 0; i < gifts.size(); i++)
        {
            if(gifts[i] == num)
            {
                count ++;
            }
        }
        if(count > (n / 2))
        {
            return num;
        }
        else
            return 0;
    }
};
